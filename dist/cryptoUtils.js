(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const c of e)if(c.type==="childList")for(const a of c.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function o(e){const c={};return e.integrity&&(c.integrity=e.integrity),e.referrerPolicy&&(c.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?c.credentials="include":e.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function t(e){if(e.ep)return;e.ep=!0;const c=o(e);fetch(e.href,c)}})();function l(r){return new TextEncoder().encode(r)}function f(r){return new TextDecoder().decode(r)}function s(r){return btoa(String.fromCharCode(...new Uint8Array(r)))}function u(r){const n=atob(r),o=new Uint8Array(n.length);for(let t=0;t<n.length;t++)o[t]=n.charCodeAt(t);return o.buffer}let i=null;async function y(){return i||new Promise((r,n)=>{chrome.storage.local.get(["cryptoSalt"],async o=>{let t;o.cryptoSalt?t=u(o.cryptoSalt):(t=crypto.getRandomValues(new Uint8Array(16)),chrome.storage.local.set({cryptoSalt:s(t)}));const e=await crypto.subtle.importKey("raw",l("web-ai-secret"),"PBKDF2",!1,["deriveKey"]);i=await crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]),r(i)})})}async function d(r){const n=await y(),o=crypto.getRandomValues(new Uint8Array(12)),t=await crypto.subtle.encrypt({name:"AES-GCM",iv:o},n,l(r));return{iv:s(o),cipher:s(t)}}async function p(r,n){const o=await y(),t=await crypto.subtle.decrypt({name:"AES-GCM",iv:u(n)},o,u(r));return f(t)}export{p as d,d as e,y as i};
